/*Regla CSS consta de dos partes 
 
1) El selector
2) Bloque de declaraciones
 atributo:valor; 
*/

@import url(otra-hoja.css); /* LLamar hojas de estilo dentro de una hoja de estilo, se consideran MALA PRACTICA PORQUE SON BLOQUEANTES A LA HORA DE QUE EL NAVEGADOR LEE ESTA INSTRUCCIÓN */

h1 {
  color: orangered;
  background-color: black;
}

/* Selectores básicos

1. Etiquetas - Son elementos HTML
2. Identificadores - Atributo id - #
3. Clases - Atributo class - .

*/

p {
  color: midnightblue;
}

/* Dar estilos con id´s se considera mala práctica */
#parrafo-2 {
  color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro código CSS */

.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}
.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.text-white {
  color: white;
}

/* Selector de hijos directos */

.hijos-directos > li {
  background-color: aqua;
}

/* Selector de hijos descendientes */

.hijos-descendientes b {
  background-color: aqua;
}

/* Selectores hermanos general */
/* Los selectores de hermanos a los elementos que son hermanos y que estén por debajo del elemento de referencia */

.hermanos-general ~ li {
  background-color: aqua;
}

/* Hermanos adyacentes */
.hermanos-adyacentes + li {
  background-color: aqua;
}

/* Selectores de atributo */

.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/* El comodin de asterisco aplica el estilo si contiene el texto en cuestión en cualquier parte */
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/*El comodín del circunflejo aplica el estilo si contiene el texto en cuestión al inicio */

.selectores-atributos a[href^="http"] {
  text-decoration: none;
}

/*El comodín de $ aplica el estilo si contiene el texto en cuestión al final */

.selectores-atributos a[href$=".com"] {
  background-color: black;
}
/*El comodín de ~ aplica el estilo si contiene el texto en cuestión en una lista separada por espacios */

.selectores-atributos a[class~="cursos"] {
  background-color: steelblue;
}

/*El comodín de | aplica el estilo si contiene el texto en cuestión en una lista separada por espacios y que despues del texto en cuestión pueda venir un guión medio */

.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/* Selector universal */

* {
  font-family: "Courier New", Courier, monospace;
}

.selector-universal * {
  font-size: 24px;
}

/* Pseudoclases - Dan estilos dependiendo del contexto, posición o estado del elemento */

.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}

.form-pseudoclases *:focus {
  background-color: skyblue;
}

.form-pseudoclases *:disabled {
  background-color: pink;
}

.menu-pseudoclases a:visited {
  color: olive;
}

.menu-pseudoclases a:hover {
  color: orange;
}

.p-pseudoclases:hover {
  font-size: 24px;
}

#temario-css:target {
  background-color: lightgreen;
}

.lista-pseudoclases li:last-child {
  color: white;
}

.lista-pseudoclases li:nth-child(3) {
  color: red;
}
.lista-pseudoclases li:nth-child(4n) {
  font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n + 1) {
  font-weight: bold;
}

.lista-pseudoclases li:nth-child(odd) {
  background-color: yellow;
}

.lista-pseudoclases li:nth-child(even) {
  background-color: orange;
}

.articulo-pseudoclases p:first-of-type {
  background-color: pink;
}

.articulo-pseudoclases p:last-of-type {
  background-color: violet;
}

.articulo-pseudoclases p:nth-of-type(3) {
  background-color: fuchsia;
}

.articulo-pseudoclases *:not(p) {
  background-color: skyblue;
}

/* Los pseudoelementos Dan estilos a partes específicas de un elemento, se usa el :: para diferenciarlos de las pseudoclases */

.estadio::before {
  content: "👻";
}

.estadio::after {
  content: "😎";
}

.capacidad::before {
  content: "$";
  font-weight: bold;
}

.capacidad::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32px;
}

.p-pseudoelementos::first-line {
  color: coral;
}

.p-pseudoelementos::selection {
  color: greenyellow;
  background-color: black;
}

.input-pseudoelementos::placeholder {
  color: greenyellow;
}

/* Agrupar selectores, la coma nos sirve para agrupar selectores */

.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed;
  background-color: black;
  font-size: 20px;
  display: block;
  margin-bottom: 20px;
  width: 300px;
}

/* 
El algoritmo de CSS: Es la forma en la que el navegador aplica los estilos al documento HTML. Es vital entender este concepto para que entiendas como se aplican y en alguna ocasiones se sobreescriben las reglas CSS.
Se compone de:
1. La cascada
2. La especificidad
3. La Herencia

La cascada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden: 
1.El origen del código: 
  -El User Agent (Los estilos por defecto del navegador
  -Personalizaciones del usuario.
  _Los estilos del autor.
2.La especificidad del selector.
3.Orden de aparición,  
*/

/* La especificidad es el peso que tiene un selector cuando hay conflicto de estilos. Se calcula de la siguiente forma: 
  Etiquetas y pseudoelementos---------------0,0,0,1
  Clases, atributos y pseudoclases----------0,0,1,0
  Identificadores---------------------------0,1,0,0
  Estilos en línea--------------------------1,0,0,0
  !important--------------------------------Rompe la especificidad



*/

/* La herencia, es la capacidad de un selector de obtener (heredar) los valores de sus ancestros más cercanos, para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuestión con el valor initial. */

/* Practicando cascada y especificidad */
blockquote#cita-marco.cita-marco {
  background-color: lightsteelblue;
}

blockquote {
  background-color: burlywood;
}

#cita-marco {
  background-color: lightgreen;
}

blockquote.cita-marco {
  background-color: tomato;
}

.cita-marco {
  background-color: cornflowerblue;
}

.cita-marco {
  background-color: mediumaquamarine !important; /* Mala práctica */
}

blockquote#cita-marco {
  background-color: lightsalmon;
}

.cita-marco {
  background-color: moccasin !important;
  background-color: darkorange !important;
  font-size: 32px;
  border-style: dotted;
  border-color: red;
}

.cita-marco cite {
  background-color: pink;
  background-color: inherit;
  font-size: 10px;
  font-size: initial;
  border-style: inherit;
  border-color: inherit;
}

/* 
Prefijos de los navegadores
Ejemplo:
-webkit-user-select:none;
-moz-user-select:none;
-ms-user-select: none;
user-select:none;


*/
